version: 2.1

orbs:
  python: circleci/python@0.2.1

jobs:
  # Testing on ARM64
  # https://circleci.com/docs/2.0/arm-resources/#using-arm-resources
  test-arm:
    machine:
      image: ubuntu-2004:2022.04.1
    resource_class: arm.medium
    steps:
      - checkout

      - run:
          command: uname -a
          name: Check architecture

      - run:
          # NOTE: we can't use k3s 1.24 and --docker unless we also install for
          #       example cri-dockerd as done in
          #       https://github.com/jupyterhub/action-k3s-helm.
          #
          # NOTE: we declare --egress-selector-mode=disabled to workaround
          #       intermittent issues in k3s introduced as a regression in k3s
          #       1.22.10, 1.23.7, and 1.24.0. This is tracked in
          #       https://github.com/k3s-io/k3s/issues/5633.
          #
          command: >-
            curl -sfL https://get.k3s.io |
            INSTALL_K3S_CHANNEL=v1.23 sh -s -
            --disable metrics-server
            --disable traefik
            --docker
            --egress-selector-mode=disabled
          name: Install K3S

      - run:
          command: |
            mkdir -p ~/.kube
            sudo cat /etc/rancher/k3s/k3s.yaml > "$HOME/.kube/config"
            chmod 600 "$HOME/.kube/config"
          name: Prepare a kubeconfig in ~/.kube/config

      - run:
          command: |
            . ci/common
            setup_helm
            pip3 install --no-cache-dir -r dev-requirements.txt
          name: Install dependencies

      - run:
          command: |
            export DOCKER_BUILDKIT=1
            chartpress
          name: Run chartpress

      - run:
          command: |
            export KUBECONFIG="$HOME/.kube/config"
            helm upgrade --install jupyterhub ./jupyterhub \
                --wait \
                --values dev-config.yaml \
                --values dev-config-arm.yaml \
                --values dev-config-local-chart-extra-config.yaml
          name: Install local chart

      - run:
          command: |
            export KUBECONFIG="$HOME/.kube/config"
            export HUB_URL=http://localhost:30080
            . ./ci/common
            pytest --verbose --color=yes ./tests -m 'not netpol'
          name: Run tests

      - run:
          name: k8s namespace report
          when: on_fail
          command: |
            export KUBECONFIG="$HOME/.kube/config"
            wget https://raw.githubusercontent.com/jupyterhub/action-k8s-namespace-report/v1.1.0/k8s-namespace-report
            bash k8s-namespace-report
          environment:
            NAMESPACE: ""
            POD_SELECTOR: ""
            IMPORTANT_WORKLOADS: ""

workflows:
  main:
    jobs:
      - test-arm
